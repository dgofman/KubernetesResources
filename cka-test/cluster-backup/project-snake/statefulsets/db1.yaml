apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"name":"db1","namespace":"project-snake"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"db1"}},"serviceName":"db1","template":{"metadata":{"labels":{"app":"db1"}},"spec":{"containers":[{"image":"nginx:1.19.2-alpine","name":"db1","volumeMounts":[{"mountPath":"/etc/nginx/nginx.conf","name":"nginx-config","subPath":"nginx.conf"}]}],"volumes":[{"configMap":{"name":"db1"},"name":"nginx-config"}]}}}}
  creationTimestamp: "2022-09-29T14:30:59Z"
  generation: 1
  name: db1
  namespace: project-snake
  resourceVersion: "5296"
  uid: c146d004-da50-4e41-9aff-d1e5892cf5de
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: db1
  serviceName: db1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: db1
    spec:
      containers:
      - image: nginx:1.19.2-alpine
        imagePullPolicy: IfNotPresent
        name: db1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-config
          subPath: nginx.conf
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: db1
        name: nginx-config
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
status:
  availableReplicas: 1
  collisionCount: 0
  currentReplicas: 1
  currentRevision: db1-f79bd8fb7
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updateRevision: db1-f79bd8fb7
  updatedReplicas: 1
